version: "3.9"

x-tt-service:
  &default-tt-service

  ports:
    - "80"

  labels:
    org.the-tale.group: services

  command: tt_run_service

  stop_grace_period: 1s

  environment:
    TT_WAIT_TIMEOUT: $TT_WAIT_TIMEOUT

  depends_on:
    - core-postgresql

  profiles:
    - services

  networks:
    tt_network: {}

x-the-tale:
  &default-the-tale

  stop_grace_period: 1s

  environment:
    TT_WAIT_TIMEOUT: $TT_WAIT_TIMEOUT
    TT_SITE_STATIC_DIR: $TT_SITE_STATIC_DIR

  image: $TT_CONTAINERS_REGISTRY/the-tale/site:$TT_RELEASE_VERSION

  volumes:
    # all site containers must has access to static files foulder
    # they determine maintenance mode with its help
    - tt_site_static:/var/www/site/

  depends_on:
    - core-postgresql
    - core-redis
    - core-rabbitmq

  networks:
    tt_network: {}

x-the-tale-worker:
  &default-the-tale-worker
  << : *default-the-tale

  command: tt_worker

  stop_grace_period: 10s

  profiles:
    - workers

  labels:
    org.the-tale.group: workers

  depends_on:
    - core-postgresql
    - core-redis
    - core-rabbitmq
    - utils-site-migrations


networks:
  tt_network:
    driver: bridge


volumes:
  tt_nginx_sertificates: {}
  tt_site_static: {}


services:

  core-postgresql:

    image: $TT_CONTAINERS_REGISTRY/the-tale/core-postgresql:$TT_RELEASE_VERSION

    volumes:
       - ${PWD}/docker/postgresql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
       - $TT_CONFIGS_ROOT/postgresql/postgresql.$TT_ENV.conf:/etc/postgresql/postgresql.conf:ro

    ports:
      - "5432"

    stop_grace_period: 1m

    environment:
      TT_DATABASES: $TT_DATABASES

    labels:
      org.the-tale.group: core

    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]

    networks:
      tt_network: {}

  utils-backup:

    image: $TT_CONTAINERS_REGISTRY/the-tale/utils-backup:$TT_RELEASE_VERSION

    volumes:
       - $TT_CONFIGS_ROOT/utils_backup/aws.config:/root/aws.config:ro

    stop_grace_period: 1m

    labels:
      org.the-tale.group: utils

    environment:
      TT_DATABASES: $TT_DATABASES
      TT_S3_BACKET: "s3 backet name"

    depends_on:
      - core-postgresql

    networks:
      tt_network: {}

    profiles:
      - utils

  core-redis:

    image: $TT_CONTAINERS_REGISTRY/the-tale/core-redis:$TT_RELEASE_VERSION

    stop_grace_period: 1m

    ports:
      - "6379"

    labels:
      org.the-tale.group: core

    networks:
      tt_network: {}

  core-rabbitmq:

    image: $TT_CONTAINERS_REGISTRY/the-tale/core-rabbitmq:$TT_RELEASE_VERSION

    stop_grace_period: 1m

    ports:
      - "5672"

    volumes:
       - $TT_CONFIGS_ROOT/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
       - $TT_CONFIGS_ROOT/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro

    labels:
      org.the-tale.group: core

    networks:
      tt_network: {}

  core-nginx:

    command: [nginx-debug, '-g', 'daemon off;']

    image: $TT_CONTAINERS_REGISTRY/the-tale/core-nginx:$TT_RELEASE_VERSION

    environment:
      TT_SERVERS: "site temp_informer xsolla localhost"

    stop_grace_period: 1s

    labels:
      org.the-tale.group: core

    volumes:
      - $TT_CONFIGS_ROOT/nginx/templates:/nginx-config-templates:ro
      - $TT_CONFIGS_ROOT/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - $TT_CONFIGS_ROOT/nginx/config.$TT_ENV.json:/root/nginx_config.json:ro
      - tt_nginx_sertificates:/etc/nginx/certificates/:ro
      - tt_site_static:/var/www/site/:ro

    ports:
      - "80:80"
      - "443:443"

    networks:
      tt_network: {}

  utils-certbot:

    image: $TT_CONTAINERS_REGISTRY/the-tale/utils-certbot:$TT_RELEASE_VERSION

    labels:
      org.the-tale.group: utils

    volumes:
      - tt_nginx_sertificates:/etc/nginx/certificates/
      - $TT_CONFIGS_ROOT/utils-certbot/cli.ini /etc/letsencrypt/cli.ini


  tt-diary:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-diary:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_diary/config.json:/home/tt_service/config.json

  tt-personal-messages:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-personal-messages:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_personal_messages/config.json:/home/tt_service/config.json

  tt-storage:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-storage:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_storage/config.json:/home/tt_service/config.json

  tt-market:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-market:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_market/config.json:/home/tt_service/config.json

  tt-players-timers:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-timers:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_players_timers/config.json:/home/tt_service/config.json

  tt-personal-impacts:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-impacts:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_personal_impacts/config.json:/home/tt_service/config.json

  tt-crowd-impacts:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-impacts:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_crowd_impacts/config.json:/home/tt_service/config.json

  tt-job-impacts:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-impacts:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_job_impacts/config.json:/home/tt_service/config.json

  tt-fame-impacts:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-impacts:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_fame_impacts/config.json:/home/tt_service/config.json

  tt-game-chronicle:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-events-log:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_game_chronicle/config.json:/home/tt_service/config.json

  tt-clans-chronicle:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-events-log:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_clans_chronicle/config.json:/home/tt_service/config.json

  tt-money-spendings:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-impacts:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_money_spendings/config.json:/home/tt_service/config.json

  tt-emissaries-impacts:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-impacts:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_emissaries_impacts/config.json:/home/tt_service/config.json

  tt-players-properties:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-properties:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_players_properties/config.json:/home/tt_service/config.json

  tt-clans-properties:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-properties:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_clans_properties/config.json:/home/tt_service/config.json

  tt-matchmaker:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-matchmaker:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_matchmaker/config.json:/home/tt_service/config.json

  tt-places-effects:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-effects:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_places_effects/config.json:/home/tt_service/config.json

  tt-clans-currencies:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-bank:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_clans_currencies/config.json:/home/tt_service/config.json

  tt-emissaries-events-currencies:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-bank:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_emissaries_events_currencies/config.json:/home/tt_service/config.json

  tt-emissaries-events-uniquer:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-uniquer:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_emissaries_events_uniquer/config.json:/home/tt_service/config.json

  tt-discord:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-discord:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_discord/config.json:/home/tt_service/config.json

  tt-data-protector:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-data-protector:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_data_protector/config.json:/home/tt_service/config.json

  tt-xsolla:
    << : *default-tt-service

    image: $TT_CONTAINERS_REGISTRY/the-tale/tt-xsolla:$TT_RELEASE_VERSION

    volumes:
      - $TT_CONFIGS_ROOT/tt_xsolla/config.json:/home/tt_service/config.json

  utils-site-migrations:
    << : *default-the-tale

    labels:
      org.the-tale.group: utils

    profiles:
      - utils
      - workers
      - site

    command: tt_django migrate

  site:
    << : *default-the-tale

    command: tt_site -b 0.0.0.0:80 -w 4

    ports:
      - "80"

    profiles:
      - site

    depends_on:
      - core-postgresql
      - core-redis
      - core-rabbitmq
      # - core-nginx — site can be accessed by tt-services even if nginx has not started
      - utils-site-migrations

    labels:
      org.the-tale.group: site

  utils-site:
    << : *default-the-tale

    profiles:
      - utils

    labels:
      org.the-tale.group: utils

    depends_on:
      - core-postgresql
      - core-redis
      - core-rabbitmq
      - utils-site-migrations

  utils-site-generate-static:
    << : *default-the-tale

    profiles:
      - utils

    command: tt_generate_static

    labels:
      org.the-tale.group: utils

    depends_on:
      - core-postgresql
      - core-redis
      - core-rabbitmq
      - utils-site-migrations

  worker-bank-processor:
    << : *default-the-tale-worker
    environment:
      TT_WORKER: bank_processor

  worker-xsolla-banker:
    << : *default-the-tale-worker
    environment:
      TT_WORKER: xsolla_banker

  worker-refrigerator:
    << : *default-the-tale-worker
    environment:
      TT_WORKER: refrigerator

  worker-message-sender:
    << : *default-the-tale-worker
    environment:
      TT_WORKER: message_sender

  worker-items-manager:
    << : *default-the-tale-worker
    environment:
      TT_WORKER: items_manager

  worker-linguistics-manager:
    << : *default-the-tale-worker
    environment:
      TT_WORKER: linguistics_manager

  worker-achievements-manager:
    << : *default-the-tale-worker
    environment:
      TT_WORKER: achievements_manager

    depends_on:
      - worker-items-manager

  worker-turns-loop:
    << : *default-the-tale-worker
    environment:
      TT_WORKER: turns_loop

  worker-logic-1:
    << : *default-the-tale-worker
    environment:
      TT_WORKER: logic_1

    # service can be stopped only by worker_supervisor
    stop_grace_period: 8760h

  worker-logic-2:
    << : *default-the-tale-worker
    environment:
      TT_WORKER: logic_2

    # service can be stopped only by worker_supervisor
    stop_grace_period: 8760h

  worker-quests-generator:
    << : *default-the-tale-worker
    environment:
      TT_WORKER: quests_generator

  worker-supervisor:
    << : *default-the-tale-worker
    environment:
      TT_WORKER: supervisor

    stop_grace_period: 1h

    depends_on:
      - worker-logic-1
      - worker-logic-2
